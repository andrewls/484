broadcast - the example that we did in particular is a hypercube

broadcast(int numdim, int rank, float *value) {
  int notparticipating = pow(2, numdim-1)-1
  int bitmask = pow(2, numdim-1);
  float newvalue = *value
  for (curdim = 0; curdim < numdim; curdim++) {
    if ((rank & notparticipating) == 0) {
      if (rank & bitmask == 0) {
        int msg_dest = rank ^ bitmask;
        send(sum, msg_dest);
      }
      else {
        int msg_src = rank ^ bitmask;
        recv(&newvalue, msg_src);
        sum += newvalue; // this might not have been there? Look at the code on learning suite
      }
      notparticipating >>= 1
      bitmask >>= 1
    }
  }
  *value = newvalue;
}

// numdim = number of dimensions
// I'm pretty sure that rank is the node that's actually running the code. It just knows which node it is, so it tries to figure out what it is

Stepping through

notparticipating  011           001           000
bitmask           100           010           001
curdim            0             1             2
000               send(100)     send(010)     send(001)
001               x             x             recv(000)
010               x             recv(000)     send(011)
011               x             x             recv(010)
100               recv(000)     send(110)     send(101)
101               x             x             recv(100)
110               x             recv(100)     send(111)
111               x             x             recv(110)


the weird 000 number sequences are the rank of each node, apparently?


Reduction - psuedocode is apparently posted on learning suite?

notparticipating    0             001         011
bitmask             1             010         100
curdim              0             1           2
000                 recv(001)     recv(010)   recv(100)
001                 send(000)     x           x
010                 recv(011)     send(000)   x
011                 send(010)     x           x
100                 recv(101)     recv(110)   send(000)
101                 send(100)     x           x
110                 recv(111)     send(100)   x
111                 send(110)     x           x
